{
	"name": "RemoveDuplicates",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText1",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Target",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "Target",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "window1"
				},
				{
					"name": "filter1"
				},
				{
					"name": "sort1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ID as integer,",
				"          Name as string,",
				"          DOD as string,",
				"          {Mobile Number} as string,",
				"          Email as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 window(over(ID),",
				"     asc(ID, true),",
				"     Ranking = rowNumber()) ~> window1",
				"window1 filter(Ranking == 1) ~> filter1",
				"source1 sort(asc(ID, false),",
				"     caseInsensitive: true,",
				"     partitionBy('hash', 1)) ~> sort1",
				"filter1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          ID,",
				"          Name,",
				"          DOD,",
				"          {Mobile Number},",
				"          Email",
				"     )) ~> sink1",
				"sort1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink2"
			]
		}
	}
}