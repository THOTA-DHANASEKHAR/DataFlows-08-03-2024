{
	"name": "scdt21",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "scdt1",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "target_effectivedate",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "target_effectivedate",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "target_effectivedate",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "select1"
				},
				{
					"name": "lookup1"
				},
				{
					"name": "select2"
				},
				{
					"name": "filter1"
				},
				{
					"name": "derivedColumn2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Id as short,",
				"          Name as string,",
				"          Salary as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source(output(",
				"          surrogatekey as integer,",
				"          id as integer,",
				"          name as string,",
				"          salary as integer,",
				"          start_date as date,",
				"          end_date as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source2",
				"source1 derive(start_date = currentUTC() + minutes(330),",
				"          end_date = ERROR_FUNCTION('')) ~> derivedColumn1",
				"source2 select(mapColumn(",
				"          SQL_surrogatekey = surrogatekey,",
				"          SQL_id = id,",
				"          SQL_name = name,",
				"          SQL_salary = salary,",
				"          SQL_start_date = start_date,",
				"          SQL_end_date = end_date",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1, source1 lookup(SQL_id == Id,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookup1",
				"lookup1 select(mapColumn(",
				"          SQL_surrogatekey,",
				"          SQL_id,",
				"          SQL_name,",
				"          SQL_salary,",
				"          SQL_start_date,",
				"          SQL_end_date",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"select2 filter(isNull(SQL_end_date)) ~> filter1",
				"filter1 derive(SQL_end_date = currentUTC() + minutes(330)) ~> derivedColumn2",
				"derivedColumn2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          surrogatekey as integer,",
				"          id as integer,",
				"          name as string,",
				"          salary as integer,",
				"          start_date as date,",
				"          end_date as date",
				"     ),",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:true,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          surrogatekey as integer,",
				"          id as integer,",
				"          name as string,",
				"          salary as integer,",
				"          start_date as date,",
				"          end_date as date",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink2"
			]
		}
	}
}